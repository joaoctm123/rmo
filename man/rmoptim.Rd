% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{rmoptim}
\alias{rmoptim}
\title{R Modern Optimization function}
\usage{
rmoptim(method, D, lb, ub, type, eval, control = list())
}
\arguments{
\item{method}{- Modern Optimization Method
\itemize{
\item \code{"fbs"} - Full Blind Search - It searches all the possible alternatives, where any of the previous solution doesn't affect the next solution
                     being tested. This method only runs binary and integer optimization problems.
\item \code{"grs"} - Grid Search - This method reduces the search of solutions by using a regular hyper dimensional search with a given step size. This method                         only runs integer and real optimization problems.
\item \code{"mcs"} - Monte Carlo Search - Random generation of poins, using a given probability distribution.
\item \code{"hlc"} - Hill Climb  - Local search method.
\item \code{"sann"} - Simulated Anneling - Method like the Hill Climb. Uses optim function
from R \url{https://stat.ethz.ch/R-manual/R-devel/library/stats/html/optim.html}
\item \code{"tabu"} - Tabu Search - It uses a list with previous solutions to force the search into new areas. It uses \code{\link[tabuSearch]{tabuSearch}}
\item \code{"gea"} - Genetic and Evolutionary Algorithms - Population based method with a population of competing solutions.
It uses \code{\link[genalg]{rbga}} or \code{\link[genalg]{rbga.bin}} for binary problems.
\item \code{"dfev"} - Differential Evolution - Similar to \code{"gea"},but uses arithmetic operators to generate a new solution.
It uses \code{\link[DEoptim]{DEoptim}}
\item \code{"pso"} - Particle Swarm Optimization - Belongs to a family of methods who are naturally inspired. It uses \code{\link[pso]{psoptim}}
\item \code{"eda"} - Estimation of Distribution Algorithm - This method combines ideas from evolutionary computation, machine learning and statistics.
It uses \code{\link[copulaedas]{edaRun}}
\item \code{"abc"} - Artificial Bee Colony - Based on Bees behavior. It uses \code{\link[ABCoptim]{abc_optim}}
}}

\item{D}{- Dimension, the number of elements to be optimized}

\item{lb,ub}{- two values or two vectors specifying scalar real lower and upper bounds on each parameter
                  to be optimized, so that the i-th element of lower and upper applies to the ith
                  parameter. The implementation searches between lower and upper for the
                  global optimum eval.}

\item{type}{- Function Type - "max" for maximization problem or "min" for minimization problem}

\item{eval}{- Evaluation function to be minimized or maximized.}

\item{control}{- A list of control parameters. See "Details"}
}
\value{
The output of the function \code{rmoptim} is a list containing the optimized parameters \code{"$sol"} and the optimum value of the function \code{"$fun"}.
}
\description{
Today, a great number of tasks can be viewed as an optimization problem, where the goal is to minimize of maximize a given goal.
Otimization problems exists in many areas such as Agriculture, Banking, Engineering, Finance and many more. With the optimization problems getting complex and
computers processing getting better by the time, the use of computers to solve optimization problems was more frequent. For that were created many algorithms
to solve the optimization task.
The propose of this package is to make a junction of the many optimization algorithms that exists to the R tool. With this package a user can perform
optimization tasks in a easier way, than using a single package with a single optimization method.
}
\details{
The control argument is a list that can supply any of the following components:
\itemize{
\item \strong{iter} - The maximum number of iterations.
\item \strong{step} - Mandatory control parameter to the use of Grid Search. See examples to know how to use it.
 	\item \strong{numb} - Type of data representation of the final solution. \code{bin} for binary solutions and automatically sets lower and upper bounds to 0 and 1 respectively. \code{real} for real number solutions or \code{int} for integer solutions. By default sets \code{real} for optimization problems.
 \item \strong{...} - Also the user can insert other parameters to change the behavior of the method. For example, in the \code{"SANN"} method, by default
 the \code{"temp"} parameter is set to 10. But if the user wants to change it, he just needs to insert the parameter \code{"temp"} in the control list, then
 the package automatically sets the parameter to the value inserted by the user.
 The user can set as much parameters as he wants, it's only necessary to follow the original documentation of the method, that is referenced in the References
 topic.

}
}
\examples{
  ## Demo function that executes three types of optimization. The objective of this Demo function
  ## is to help the user to understand the parameters and the operation of the package.
  ## The first problem being presented is an integer optimization problem. This problem can
  ## be found on the book Modern Optimization with R. The objective of the problem is to find
  ## the best price for five different bags that a company produces. The objective of this
  ## function is to maximize the profit.
  ## The second problem, is a real number optimization problem which is executed a minimization
  ## function only with two dimensions.
  ## Finally the last one, is a binary optimization problem, only with two iterations.
  ## The objective function performs the summation of all dimensions. Per example, if the
  ## dimensions are (0,1,1,0,0), the sum is 2.
  \dontrun{

    demo(rmo)
  }

  ## Some examples:

  ## Real Number Optimization Problem
  ## Objective Function:

  fun <- function(x) {
	-cos(x[1])*cos(x[2])*exp(-((x[1] - pi)^2 + (x[2] - pi)^2))
  }

  ## Minimization Function
  ## Dimension: 2
  ## Lower: -20
  ## Upper: 20

  rmoptim("pso",2,-20,20,"min",fun,list(numb="real",reltol=2)) #using the Particle Swarm Optimization method

  ## Also in this case can be percetible the use of the reltol variable in the control list
  ## which changes the behavior in his execution

  ## Output:
  ## Particle Swarm Optimization
  ## Optimum Solution:  3.141602 3.141586  -  1

  rmoptim("dfev",2,-20,20,"min",fun,list(numb="real")) #using the Differential Evolution method

  ## Output:
  ## Differential Evolution
  ## Optimum Solution:  3.141593 3.141593  -  1

  rmoptim("abc",2,-20,20,"min",fun,list(numb="int",maxCycle=100))

  ## The same optimization problem was used with Artificial Bee Colony, but in this case
  ## the final representation of the solution is with integer values.
  ## Also it is set the maxCycle in control list, with the value of 100.
  ## This means that the maximum number of iterations is 100. The user instead
  ## could set the value iter, which both does the same.

  ## Output:
  ## Artificial Bee Colony
  ## Optimum Solution:  3 3 -  1



}
\references{
\itemize{
 \item - To check from where was inspired this package and to find some Optimization Problems:
 Paulo Cortez, Modern Optimization with R, Use R! series, Springer, September 2014.
 \item - ABCoptim: George, A., Yon, V., & George, M. (2015). Package "ABCoptim" Title Implementation of Artificial Bee Colony (ABC) Optimization. Retrieved from http://github.com/gvegayon/ABCoptim,
 \item - DEoptim: Ardia, D., Mullen, K. M., & Peterson, B. G. (n.d.). DEoptim : An R Package for Global Optimization by Differential Evolution, (2006).
 \item - TabuSearch: Katarina, D. (2015). Package tabuSearch (c)
 \item - Genalg: Willighagen, E., Maintainer, M. B., & Ballings, M. (2015). Package "genalg" Title R Based Genetic Algorithm. Retrieved from https://github.com/egonw/genalg
 \item - PSO: Bendtsen, C. (2015). Package "pso" Title Particle Swarm Optimization.
 \item - EDA: Gonzalez-Fernandez, Y., Soto, M., & Maintainer, ]. (2015). Title Estimation of Distribution Algorithms Based on Copulas. Retrieved from https://github.com/yasserglez/copulaedas
}
}

